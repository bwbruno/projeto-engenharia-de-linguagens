digraph Automaton {
  0 [label="0\n$accept -> . prog $end"]
  0 -> 1 [style=solid label="PROCEDURE"]
  0 -> 2 [style=solid label="FUNCTION"]
  0 -> 3 [style=dashed label="prog"]
  0 -> 4 [style=dashed label="subprogrs"]
  0 -> 5 [style=dashed label="subprog"]
  0 -> 6 [style=dashed label="procedure"]
  0 -> 7 [style=dashed label="function"]
  1 [label="1\nprocedure -> PROCEDURE . ID LPAREN args RPAREN LBRACE stmt_list RBRACE"]
  1 -> 8 [style=solid label="ID"]
  2 [label="2\nfunction -> FUNCTION . ID LPAREN args RPAREN COLON type LBRACE stmt_list RBRACE"]
  2 -> 9 [style=solid label="ID"]
  3 [label="3\n$accept -> prog . $end"]
  3 -> 10 [style=solid label="$end"]
  4 [label="4\nprog -> subprogrs .\nsubprogrs -> subprogrs . subprog"]
  4 -> 1 [style=solid label="PROCEDURE"]
  4 -> 2 [style=solid label="FUNCTION"]
  4 -> 11 [style=dashed label="subprog"]
  4 -> 6 [style=dashed label="procedure"]
  4 -> 7 [style=dashed label="function"]
  5 [label="5\nsubprogrs -> subprog ."]
  6 [label="6\nsubprog -> procedure ."]
  7 [label="7\nsubprog -> function ."]
  8 [label="8\nprocedure -> PROCEDURE ID . LPAREN args RPAREN LBRACE stmt_list RBRACE"]
  8 -> 12 [style=solid label="LPAREN"]
  9 [label="9\nfunction -> FUNCTION ID . LPAREN args RPAREN COLON type LBRACE stmt_list RBRACE"]
  9 -> 13 [style=solid label="LPAREN"]
  10 [label="10\n$accept -> prog $end ."]
  11 [label="11\nsubprogrs -> subprogrs subprog ."]
  12 [label="12\nprocedure -> PROCEDURE ID LPAREN . args RPAREN LBRACE stmt_list RBRACE"]
  12 -> 14 [style=solid label="INT"]
  12 -> 15 [style=solid label="DOUBLE"]
  12 -> 16 [style=solid label="STRING"]
  12 -> 17 [style=solid label="BOOL"]
  12 -> 18 [style=dashed label="args"]
  12 -> 19 [style=dashed label="type"]
  13 [label="13\nfunction -> FUNCTION ID LPAREN . args RPAREN COLON type LBRACE stmt_list RBRACE"]
  13 -> 14 [style=solid label="INT"]
  13 -> 15 [style=solid label="DOUBLE"]
  13 -> 16 [style=solid label="STRING"]
  13 -> 17 [style=solid label="BOOL"]
  13 -> 20 [style=dashed label="args"]
  13 -> 19 [style=dashed label="type"]
  14 [label="14\ntype -> INT ."]
  15 [label="15\ntype -> DOUBLE ."]
  16 [label="16\ntype -> STRING ."]
  17 [label="17\ntype -> BOOL ."]
  18 [label="18\nprocedure -> PROCEDURE ID LPAREN args . RPAREN LBRACE stmt_list RBRACE\nargs -> args . COMMA type ID"]
  18 -> 21 [style=solid label="COMMA"]
  18 -> 22 [style=solid label="RPAREN"]
  19 [label="19\nargs -> type . ID"]
  19 -> 23 [style=solid label="ID"]
  20 [label="20\nfunction -> FUNCTION ID LPAREN args . RPAREN COLON type LBRACE stmt_list RBRACE\nargs -> args . COMMA type ID"]
  20 -> 21 [style=solid label="COMMA"]
  20 -> 24 [style=solid label="RPAREN"]
  21 [label="21\nargs -> args COMMA . type ID"]
  21 -> 14 [style=solid label="INT"]
  21 -> 15 [style=solid label="DOUBLE"]
  21 -> 16 [style=solid label="STRING"]
  21 -> 17 [style=solid label="BOOL"]
  21 -> 25 [style=dashed label="type"]
  22 [label="22\nprocedure -> PROCEDURE ID LPAREN args RPAREN . LBRACE stmt_list RBRACE"]
  22 -> 26 [style=solid label="LBRACE"]
  23 [label="23\nargs -> type ID ."]
  24 [label="24\nfunction -> FUNCTION ID LPAREN args RPAREN . COLON type LBRACE stmt_list RBRACE"]
  24 -> 27 [style=solid label="COLON"]
  25 [label="25\nargs -> args COMMA type . ID"]
  25 -> 28 [style=solid label="ID"]
  26 [label="26\nprocedure -> PROCEDURE ID LPAREN args RPAREN LBRACE . stmt_list RBRACE"]
  26 -> 29 [style=solid label="ID"]
  26 -> 30 [style=solid label="WHILE"]
  26 -> 31 [style=solid label="DO"]
  26 -> 32 [style=dashed label="stmt_list"]
  26 -> 33 [style=dashed label="stmt"]
  26 -> 34 [style=dashed label="assign_stmt"]
  26 -> 35 [style=dashed label="while_stmt"]
  27 [label="27\nfunction -> FUNCTION ID LPAREN args RPAREN COLON . type LBRACE stmt_list RBRACE"]
  27 -> 14 [style=solid label="INT"]
  27 -> 15 [style=solid label="DOUBLE"]
  27 -> 16 [style=solid label="STRING"]
  27 -> 17 [style=solid label="BOOL"]
  27 -> 36 [style=dashed label="type"]
  28 [label="28\nargs -> args COMMA type ID ."]
  29 [label="29\nassign_stmt -> ID . assign_op expr"]
  29 -> 37 [style=solid label="ADD_ASSIGN"]
  29 -> 38 [style=solid label="SUB_ASSIGN"]
  29 -> 39 [style=solid label="MULT_ASSIGN"]
  29 -> 40 [style=solid label="DIVIDE_ASSIGN"]
  29 -> 41 [style=solid label="MODULE_ASSIGN"]
  29 -> 42 [style=solid label="ASSIGN"]
  29 -> 43 [style=dashed label="assign_op"]
  30 [label="30\nwhile_stmt -> WHILE . LPAREN condition RPAREN LBRACE stmt_list RBRACE"]
  30 -> 44 [style=solid label="LPAREN"]
  31 [label="31\nwhile_stmt -> DO . stmt_list WHILE LPAREN condition RPAREN"]
  31 -> 29 [style=solid label="ID"]
  31 -> 30 [style=solid label="WHILE"]
  31 -> 31 [style=solid label="DO"]
  31 -> 45 [style=dashed label="stmt_list"]
  31 -> 33 [style=dashed label="stmt"]
  31 -> 34 [style=dashed label="assign_stmt"]
  31 -> 35 [style=dashed label="while_stmt"]
  32 [label="32\nprocedure -> PROCEDURE ID LPAREN args RPAREN LBRACE stmt_list . RBRACE\nstmt_list -> stmt_list . SEMI_COLON stmt"]
  32 -> 46 [style=solid label="SEMI_COLON"]
  32 -> 47 [style=solid label="RBRACE"]
  33 [label="33\nstmt_list -> stmt ."]
  34 [label="34\nstmt -> assign_stmt ."]
  35 [label="35\nstmt -> while_stmt ."]
  36 [label="36\nfunction -> FUNCTION ID LPAREN args RPAREN COLON type . LBRACE stmt_list RBRACE"]
  36 -> 48 [style=solid label="LBRACE"]
  37 [label="37\nassign_op -> ADD_ASSIGN ."]
  38 [label="38\nassign_op -> SUB_ASSIGN ."]
  39 [label="39\nassign_op -> MULT_ASSIGN ."]
  40 [label="40\nassign_op -> DIVIDE_ASSIGN ."]
  41 [label="41\nassign_op -> MODULE_ASSIGN ."]
  42 [label="42\nassign_op -> ASSIGN ."]
  43 [label="43\nassign_stmt -> ID assign_op . expr"]
  43 -> 49 [style=solid label="STRING_LITERAL"]
  43 -> 50 [style=solid label="INT_NUMBER"]
  43 -> 51 [style=solid label="DOUBLE_NUMBER"]
  43 -> 52 [style=solid label="TRUE"]
  43 -> 53 [style=solid label="FALSE"]
  43 -> 54 [style=dashed label="expr"]
  44 [label="44\nwhile_stmt -> WHILE LPAREN . condition RPAREN LBRACE stmt_list RBRACE"]
  44 -> 55 [style=solid label="ID"]
  44 -> 49 [style=solid label="STRING_LITERAL"]
  44 -> 50 [style=solid label="INT_NUMBER"]
  44 -> 51 [style=solid label="DOUBLE_NUMBER"]
  44 -> 56 [style=solid label="TRUE"]
  44 -> 57 [style=solid label="FALSE"]
  44 -> 58 [style=dashed label="expr"]
  44 -> 59 [style=dashed label="condition"]
  44 -> 60 [style=dashed label="c_term"]
  44 -> 61 [style=dashed label="comp"]
  44 -> 62 [style=dashed label="comp_term"]
  45 [label="45\nstmt_list -> stmt_list . SEMI_COLON stmt\nwhile_stmt -> DO stmt_list . WHILE LPAREN condition RPAREN"]
  45 -> 63 [style=solid label="WHILE"]
  45 -> 46 [style=solid label="SEMI_COLON"]
  46 [label="46\nstmt_list -> stmt_list SEMI_COLON . stmt"]
  46 -> 29 [style=solid label="ID"]
  46 -> 30 [style=solid label="WHILE"]
  46 -> 31 [style=solid label="DO"]
  46 -> 64 [style=dashed label="stmt"]
  46 -> 34 [style=dashed label="assign_stmt"]
  46 -> 35 [style=dashed label="while_stmt"]
  47 [label="47\nprocedure -> PROCEDURE ID LPAREN args RPAREN LBRACE stmt_list RBRACE ."]
  48 [label="48\nfunction -> FUNCTION ID LPAREN args RPAREN COLON type LBRACE . stmt_list RBRACE"]
  48 -> 29 [style=solid label="ID"]
  48 -> 30 [style=solid label="WHILE"]
  48 -> 31 [style=solid label="DO"]
  48 -> 65 [style=dashed label="stmt_list"]
  48 -> 33 [style=dashed label="stmt"]
  48 -> 34 [style=dashed label="assign_stmt"]
  48 -> 35 [style=dashed label="while_stmt"]
  49 [label="49\nexpr -> STRING_LITERAL ."]
  50 [label="50\nexpr -> INT_NUMBER ."]
  51 [label="51\nexpr -> DOUBLE_NUMBER ."]
  52 [label="52\nexpr -> TRUE ."]
  53 [label="53\nexpr -> FALSE ."]
  54 [label="54\nassign_stmt -> ID assign_op expr ."]
  55 [label="55\nc_term -> ID ."]
  56 [label="56\nexpr -> TRUE .\nc_term -> TRUE ."]
  57 [label="57\nexpr -> FALSE .\nc_term -> FALSE ."]
  58 [label="58\ncomp_term -> expr ."]
  59 [label="59\nwhile_stmt -> WHILE LPAREN condition . RPAREN LBRACE stmt_list RBRACE\ncondition -> condition . logic_op c_term"]
  59 -> 66 [style=solid label="RPAREN"]
  59 -> 67 [style=solid label="AND"]
  59 -> 68 [style=solid label="OR"]
  59 -> 69 [style=solid label="NOT"]
  59 -> 70 [style=dashed label="logic_op"]
  60 [label="60\ncondition -> c_term ."]
  61 [label="61\nc_term -> comp ."]
  62 [label="62\ncomp -> comp_term . comp_op comp_term"]
  62 -> 71 [style=solid label="EQ"]
  62 -> 72 [style=solid label="NEQ"]
  62 -> 73 [style=solid label="LT"]
  62 -> 74 [style=solid label="LE"]
  62 -> 75 [style=solid label="GT"]
  62 -> 76 [style=solid label="GE"]
  62 -> 77 [style=dashed label="comp_op"]
  63 [label="63\nwhile_stmt -> DO stmt_list WHILE . LPAREN condition RPAREN"]
  63 -> 78 [style=solid label="LPAREN"]
  64 [label="64\nstmt_list -> stmt_list SEMI_COLON stmt ."]
  65 [label="65\nfunction -> FUNCTION ID LPAREN args RPAREN COLON type LBRACE stmt_list . RBRACE\nstmt_list -> stmt_list . SEMI_COLON stmt"]
  65 -> 46 [style=solid label="SEMI_COLON"]
  65 -> 79 [style=solid label="RBRACE"]
  66 [label="66\nwhile_stmt -> WHILE LPAREN condition RPAREN . LBRACE stmt_list RBRACE"]
  66 -> 80 [style=solid label="LBRACE"]
  67 [label="67\nlogic_op -> AND ."]
  68 [label="68\nlogic_op -> OR ."]
  69 [label="69\nlogic_op -> NOT ."]
  70 [label="70\ncondition -> condition logic_op . c_term"]
  70 -> 55 [style=solid label="ID"]
  70 -> 49 [style=solid label="STRING_LITERAL"]
  70 -> 50 [style=solid label="INT_NUMBER"]
  70 -> 51 [style=solid label="DOUBLE_NUMBER"]
  70 -> 56 [style=solid label="TRUE"]
  70 -> 57 [style=solid label="FALSE"]
  70 -> 58 [style=dashed label="expr"]
  70 -> 81 [style=dashed label="c_term"]
  70 -> 61 [style=dashed label="comp"]
  70 -> 62 [style=dashed label="comp_term"]
  71 [label="71\ncomp_op -> EQ ."]
  72 [label="72\ncomp_op -> NEQ ."]
  73 [label="73\ncomp_op -> LT ."]
  74 [label="74\ncomp_op -> LE ."]
  75 [label="75\ncomp_op -> GT ."]
  76 [label="76\ncomp_op -> GE ."]
  77 [label="77\ncomp -> comp_term comp_op . comp_term"]
  77 -> 49 [style=solid label="STRING_LITERAL"]
  77 -> 50 [style=solid label="INT_NUMBER"]
  77 -> 51 [style=solid label="DOUBLE_NUMBER"]
  77 -> 52 [style=solid label="TRUE"]
  77 -> 53 [style=solid label="FALSE"]
  77 -> 58 [style=dashed label="expr"]
  77 -> 82 [style=dashed label="comp_term"]
  78 [label="78\nwhile_stmt -> DO stmt_list WHILE LPAREN . condition RPAREN"]
  78 -> 55 [style=solid label="ID"]
  78 -> 49 [style=solid label="STRING_LITERAL"]
  78 -> 50 [style=solid label="INT_NUMBER"]
  78 -> 51 [style=solid label="DOUBLE_NUMBER"]
  78 -> 56 [style=solid label="TRUE"]
  78 -> 57 [style=solid label="FALSE"]
  78 -> 58 [style=dashed label="expr"]
  78 -> 83 [style=dashed label="condition"]
  78 -> 60 [style=dashed label="c_term"]
  78 -> 61 [style=dashed label="comp"]
  78 -> 62 [style=dashed label="comp_term"]
  79 [label="79\nfunction -> FUNCTION ID LPAREN args RPAREN COLON type LBRACE stmt_list RBRACE ."]
  80 [label="80\nwhile_stmt -> WHILE LPAREN condition RPAREN LBRACE . stmt_list RBRACE"]
  80 -> 29 [style=solid label="ID"]
  80 -> 30 [style=solid label="WHILE"]
  80 -> 31 [style=solid label="DO"]
  80 -> 84 [style=dashed label="stmt_list"]
  80 -> 33 [style=dashed label="stmt"]
  80 -> 34 [style=dashed label="assign_stmt"]
  80 -> 35 [style=dashed label="while_stmt"]
  81 [label="81\ncondition -> condition logic_op c_term ."]
  82 [label="82\ncomp -> comp_term comp_op comp_term ."]
  83 [label="83\nwhile_stmt -> DO stmt_list WHILE LPAREN condition . RPAREN\ncondition -> condition . logic_op c_term"]
  83 -> 85 [style=solid label="RPAREN"]
  83 -> 67 [style=solid label="AND"]
  83 -> 68 [style=solid label="OR"]
  83 -> 69 [style=solid label="NOT"]
  83 -> 70 [style=dashed label="logic_op"]
  84 [label="84\nstmt_list -> stmt_list . SEMI_COLON stmt\nwhile_stmt -> WHILE LPAREN condition RPAREN LBRACE stmt_list . RBRACE"]
  84 -> 46 [style=solid label="SEMI_COLON"]
  84 -> 86 [style=solid label="RBRACE"]
  85 [label="85\nwhile_stmt -> DO stmt_list WHILE LPAREN condition RPAREN ."]
  86 [label="86\nwhile_stmt -> WHILE LPAREN condition RPAREN LBRACE stmt_list RBRACE ."]
}
