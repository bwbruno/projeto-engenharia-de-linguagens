digraph Automaton {
  0 [label="0\n$accept -> . prog $end"]
  0 -> 1 [style=solid label="INT"]
  0 -> 2 [style=solid label="FLOAT"]
  0 -> 3 [style=solid label="DOUBLE"]
  0 -> 4 [style=solid label="STRING"]
  0 -> 5 [style=solid label="BOOL"]
  0 -> 6 [style=dashed label="prog"]
  0 -> 7 [style=dashed label="decls"]
  0 -> 8 [style=dashed label="decl"]
  0 -> 9 [style=dashed label="type"]
  1 [label="1\ntype -> INT ."]
  2 [label="2\ntype -> FLOAT ."]
  3 [label="3\ntype -> DOUBLE ."]
  4 [label="4\ntype -> STRING ."]
  5 [label="5\ntype -> BOOL ."]
  6 [label="6\n$accept -> prog . $end"]
  6 -> 10 [style=solid label="$end"]
  7 [label="7\nprog -> decls . subprogrs"]
  7 -> 11 [style=solid label="PROCEDURE"]
  7 -> 12 [style=solid label="FUNCTION"]
  7 -> 13 [style=dashed label="subprogrs"]
  7 -> 14 [style=dashed label="subprog"]
  7 -> 15 [style=dashed label="procedure"]
  7 -> 16 [style=dashed label="function"]
  8 [label="8\ndecls -> decl . SEMI_COLON decls"]
  8 -> 17 [style=solid label="SEMI_COLON"]
  9 [label="9\ndecl -> type . dimen_op ids"]
  9 -> 18 [style=solid label="LBRACK"]
  9 -> 19 [style=dashed label="dimen_op"]
  10 [label="10\n$accept -> prog $end ."]
  11 [label="11\nprocedure -> PROCEDURE . ID LPAREN args_op RPAREN LBRACE stmt_list RBRACE"]
  11 -> 20 [style=solid label="ID"]
  12 [label="12\nfunction -> FUNCTION . ID LPAREN args_op RPAREN COLON type LBRACE stmt_list RBRACE\nfunction -> FUNCTION . MAIN LPAREN args_op RPAREN COLON type LBRACE stmt_list RBRACE"]
  12 -> 21 [style=solid label="ID"]
  12 -> 22 [style=solid label="MAIN"]
  13 [label="13\nprog -> decls subprogrs .\nsubprogrs -> subprogrs . subprog"]
  13 -> 11 [style=solid label="PROCEDURE"]
  13 -> 12 [style=solid label="FUNCTION"]
  13 -> 23 [style=dashed label="subprog"]
  13 -> 15 [style=dashed label="procedure"]
  13 -> 16 [style=dashed label="function"]
  14 [label="14\nsubprogrs -> subprog ."]
  15 [label="15\nsubprog -> procedure ."]
  16 [label="16\nsubprog -> function ."]
  17 [label="17\ndecls -> decl SEMI_COLON . decls"]
  17 -> 1 [style=solid label="INT"]
  17 -> 2 [style=solid label="FLOAT"]
  17 -> 3 [style=solid label="DOUBLE"]
  17 -> 4 [style=solid label="STRING"]
  17 -> 5 [style=solid label="BOOL"]
  17 -> 24 [style=dashed label="decls"]
  17 -> 8 [style=dashed label="decl"]
  17 -> 9 [style=dashed label="type"]
  18 [label="18\ndimen_op -> LBRACK . RBRACK"]
  18 -> 25 [style=solid label="RBRACK"]
  19 [label="19\ndecl -> type dimen_op . ids\ndimen_op -> dimen_op . LBRACK RBRACK"]
  19 -> 26 [style=solid label="ID"]
  19 -> 27 [style=solid label="LBRACK"]
  19 -> 28 [style=dashed label="ids"]
  20 [label="20\nprocedure -> PROCEDURE ID . LPAREN args_op RPAREN LBRACE stmt_list RBRACE"]
  20 -> 29 [style=solid label="LPAREN"]
  21 [label="21\nfunction -> FUNCTION ID . LPAREN args_op RPAREN COLON type LBRACE stmt_list RBRACE"]
  21 -> 30 [style=solid label="LPAREN"]
  22 [label="22\nfunction -> FUNCTION MAIN . LPAREN args_op RPAREN COLON type LBRACE stmt_list RBRACE"]
  22 -> 31 [style=solid label="LPAREN"]
  23 [label="23\nsubprogrs -> subprogrs subprog ."]
  24 [label="24\ndecls -> decl SEMI_COLON decls ."]
  25 [label="25\ndimen_op -> LBRACK RBRACK ."]
  26 [label="26\nids -> ID . assign_op expr\nids -> ID ."]
  26 -> 32 [style=solid label="ADD_ASSIGN"]
  26 -> 33 [style=solid label="SUB_ASSIGN"]
  26 -> 34 [style=solid label="MULT_ASSIGN"]
  26 -> 35 [style=solid label="DIVIDE_ASSIGN"]
  26 -> 36 [style=solid label="MODULE_ASSIGN"]
  26 -> 37 [style=solid label="ASSIGN"]
  26 -> 38 [style=dashed label="assign_op"]
  27 [label="27\ndimen_op -> dimen_op LBRACK . RBRACK"]
  27 -> 39 [style=solid label="RBRACK"]
  28 [label="28\ndecl -> type dimen_op ids .\nids -> ids . COMMA ID\nids -> ids . COMMA ID assign_op expr"]
  28 -> 40 [style=solid label="COMMA"]
  29 [label="29\nprocedure -> PROCEDURE ID LPAREN . args_op RPAREN LBRACE stmt_list RBRACE"]
  29 -> 1 [style=solid label="INT"]
  29 -> 2 [style=solid label="FLOAT"]
  29 -> 3 [style=solid label="DOUBLE"]
  29 -> 4 [style=solid label="STRING"]
  29 -> 5 [style=solid label="BOOL"]
  29 -> 41 [style=dashed label="args_op"]
  29 -> 42 [style=dashed label="args"]
  29 -> 43 [style=dashed label="arg"]
  29 -> 44 [style=dashed label="type"]
  30 [label="30\nfunction -> FUNCTION ID LPAREN . args_op RPAREN COLON type LBRACE stmt_list RBRACE"]
  30 -> 1 [style=solid label="INT"]
  30 -> 2 [style=solid label="FLOAT"]
  30 -> 3 [style=solid label="DOUBLE"]
  30 -> 4 [style=solid label="STRING"]
  30 -> 5 [style=solid label="BOOL"]
  30 -> 45 [style=dashed label="args_op"]
  30 -> 42 [style=dashed label="args"]
  30 -> 43 [style=dashed label="arg"]
  30 -> 44 [style=dashed label="type"]
  31 [label="31\nfunction -> FUNCTION MAIN LPAREN . args_op RPAREN COLON type LBRACE stmt_list RBRACE"]
  31 -> 1 [style=solid label="INT"]
  31 -> 2 [style=solid label="FLOAT"]
  31 -> 3 [style=solid label="DOUBLE"]
  31 -> 4 [style=solid label="STRING"]
  31 -> 5 [style=solid label="BOOL"]
  31 -> 46 [style=dashed label="args_op"]
  31 -> 42 [style=dashed label="args"]
  31 -> 43 [style=dashed label="arg"]
  31 -> 44 [style=dashed label="type"]
  32 [label="32\nassign_op -> ADD_ASSIGN ."]
  33 [label="33\nassign_op -> SUB_ASSIGN ."]
  34 [label="34\nassign_op -> MULT_ASSIGN ."]
  35 [label="35\nassign_op -> DIVIDE_ASSIGN ."]
  36 [label="36\nassign_op -> MODULE_ASSIGN ."]
  37 [label="37\nassign_op -> ASSIGN ."]
  38 [label="38\nids -> ID assign_op . expr"]
  38 -> 47 [style=solid label="ID"]
  38 -> 48 [style=solid label="STRING_LITERAL"]
  38 -> 49 [style=solid label="INT_NUMBER"]
  38 -> 50 [style=solid label="DOUBLE_NUMBER"]
  38 -> 51 [style=solid label="TRUE"]
  38 -> 52 [style=solid label="FALSE"]
  38 -> 53 [style=dashed label="expr"]
  39 [label="39\ndimen_op -> dimen_op LBRACK RBRACK ."]
  40 [label="40\nids -> ids COMMA . ID\nids -> ids COMMA . ID assign_op expr"]
  40 -> 54 [style=solid label="ID"]
  41 [label="41\nprocedure -> PROCEDURE ID LPAREN args_op . RPAREN LBRACE stmt_list RBRACE"]
  41 -> 55 [style=solid label="RPAREN"]
  42 [label="42\nargs_op -> args .\nargs -> args . COMMA arg"]
  42 -> 56 [style=solid label="COMMA"]
  43 [label="43\nargs -> arg ."]
  44 [label="44\narg -> type . dimen_op ID"]
  44 -> 18 [style=solid label="LBRACK"]
  44 -> 57 [style=dashed label="dimen_op"]
  45 [label="45\nfunction -> FUNCTION ID LPAREN args_op . RPAREN COLON type LBRACE stmt_list RBRACE"]
  45 -> 58 [style=solid label="RPAREN"]
  46 [label="46\nfunction -> FUNCTION MAIN LPAREN args_op . RPAREN COLON type LBRACE stmt_list RBRACE"]
  46 -> 59 [style=solid label="RPAREN"]
  47 [label="47\nexpr -> ID ."]
  48 [label="48\nexpr -> STRING_LITERAL ."]
  49 [label="49\nexpr -> INT_NUMBER ."]
  50 [label="50\nexpr -> DOUBLE_NUMBER ."]
  51 [label="51\nexpr -> TRUE ."]
  52 [label="52\nexpr -> FALSE ."]
  53 [label="53\nids -> ID assign_op expr .\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr"]
  53 -> 60 [style=solid label="PLUS"]
  53 -> 61 [style=solid label="MINUS"]
  53 -> 62 [style=solid label="MULT"]
  53 -> 63 [style=solid label="DIVIDE"]
  53 -> 64 [style=solid label="MODULE"]
  54 [label="54\nids -> ids COMMA ID .\nids -> ids COMMA ID . assign_op expr"]
  54 -> 32 [style=solid label="ADD_ASSIGN"]
  54 -> 33 [style=solid label="SUB_ASSIGN"]
  54 -> 34 [style=solid label="MULT_ASSIGN"]
  54 -> 35 [style=solid label="DIVIDE_ASSIGN"]
  54 -> 36 [style=solid label="MODULE_ASSIGN"]
  54 -> 37 [style=solid label="ASSIGN"]
  54 -> 65 [style=dashed label="assign_op"]
  55 [label="55\nprocedure -> PROCEDURE ID LPAREN args_op RPAREN . LBRACE stmt_list RBRACE"]
  55 -> 66 [style=solid label="LBRACE"]
  56 [label="56\nargs -> args COMMA . arg"]
  56 -> 1 [style=solid label="INT"]
  56 -> 2 [style=solid label="FLOAT"]
  56 -> 3 [style=solid label="DOUBLE"]
  56 -> 4 [style=solid label="STRING"]
  56 -> 5 [style=solid label="BOOL"]
  56 -> 67 [style=dashed label="arg"]
  56 -> 44 [style=dashed label="type"]
  57 [label="57\ndimen_op -> dimen_op . LBRACK RBRACK\narg -> type dimen_op . ID"]
  57 -> 68 [style=solid label="ID"]
  57 -> 27 [style=solid label="LBRACK"]
  58 [label="58\nfunction -> FUNCTION ID LPAREN args_op RPAREN . COLON type LBRACE stmt_list RBRACE"]
  58 -> 69 [style=solid label="COLON"]
  59 [label="59\nfunction -> FUNCTION MAIN LPAREN args_op RPAREN . COLON type LBRACE stmt_list RBRACE"]
  59 -> 70 [style=solid label="COLON"]
  60 [label="60\nexpr -> expr PLUS . expr"]
  60 -> 47 [style=solid label="ID"]
  60 -> 48 [style=solid label="STRING_LITERAL"]
  60 -> 49 [style=solid label="INT_NUMBER"]
  60 -> 50 [style=solid label="DOUBLE_NUMBER"]
  60 -> 51 [style=solid label="TRUE"]
  60 -> 52 [style=solid label="FALSE"]
  60 -> 71 [style=dashed label="expr"]
  61 [label="61\nexpr -> expr MINUS . expr"]
  61 -> 47 [style=solid label="ID"]
  61 -> 48 [style=solid label="STRING_LITERAL"]
  61 -> 49 [style=solid label="INT_NUMBER"]
  61 -> 50 [style=solid label="DOUBLE_NUMBER"]
  61 -> 51 [style=solid label="TRUE"]
  61 -> 52 [style=solid label="FALSE"]
  61 -> 72 [style=dashed label="expr"]
  62 [label="62\nexpr -> expr MULT . expr"]
  62 -> 47 [style=solid label="ID"]
  62 -> 48 [style=solid label="STRING_LITERAL"]
  62 -> 49 [style=solid label="INT_NUMBER"]
  62 -> 50 [style=solid label="DOUBLE_NUMBER"]
  62 -> 51 [style=solid label="TRUE"]
  62 -> 52 [style=solid label="FALSE"]
  62 -> 73 [style=dashed label="expr"]
  63 [label="63\nexpr -> expr DIVIDE . expr"]
  63 -> 47 [style=solid label="ID"]
  63 -> 48 [style=solid label="STRING_LITERAL"]
  63 -> 49 [style=solid label="INT_NUMBER"]
  63 -> 50 [style=solid label="DOUBLE_NUMBER"]
  63 -> 51 [style=solid label="TRUE"]
  63 -> 52 [style=solid label="FALSE"]
  63 -> 74 [style=dashed label="expr"]
  64 [label="64\nexpr -> expr MODULE . expr"]
  64 -> 47 [style=solid label="ID"]
  64 -> 48 [style=solid label="STRING_LITERAL"]
  64 -> 49 [style=solid label="INT_NUMBER"]
  64 -> 50 [style=solid label="DOUBLE_NUMBER"]
  64 -> 51 [style=solid label="TRUE"]
  64 -> 52 [style=solid label="FALSE"]
  64 -> 75 [style=dashed label="expr"]
  65 [label="65\nids -> ids COMMA ID assign_op . expr"]
  65 -> 47 [style=solid label="ID"]
  65 -> 48 [style=solid label="STRING_LITERAL"]
  65 -> 49 [style=solid label="INT_NUMBER"]
  65 -> 50 [style=solid label="DOUBLE_NUMBER"]
  65 -> 51 [style=solid label="TRUE"]
  65 -> 52 [style=solid label="FALSE"]
  65 -> 76 [style=dashed label="expr"]
  66 [label="66\nprocedure -> PROCEDURE ID LPAREN args_op RPAREN LBRACE . stmt_list RBRACE"]
  66 -> 77 [style=solid label="ID"]
  66 -> 1 [style=solid label="INT"]
  66 -> 2 [style=solid label="FLOAT"]
  66 -> 3 [style=solid label="DOUBLE"]
  66 -> 4 [style=solid label="STRING"]
  66 -> 5 [style=solid label="BOOL"]
  66 -> 78 [style=solid label="WHILE"]
  66 -> 79 [style=solid label="DO"]
  66 -> 80 [style=solid label="IF"]
  66 -> 81 [style=solid label="FOR"]
  66 -> 82 [style=solid label="INCREMENT"]
  66 -> 83 [style=solid label="DECREMENT"]
  66 -> 84 [style=dashed label="decls"]
  66 -> 8 [style=dashed label="decl"]
  66 -> 9 [style=dashed label="type"]
  66 -> 85 [style=dashed label="stmt_list"]
  66 -> 86 [style=dashed label="stmt"]
  66 -> 87 [style=dashed label="while_stmt"]
  66 -> 88 [style=dashed label="if_stmt"]
  66 -> 89 [style=dashed label="for_stmt"]
  66 -> 90 [style=dashed label="inc_dec"]
  67 [label="67\nargs -> args COMMA arg ."]
  68 [label="68\narg -> type dimen_op ID ."]
  69 [label="69\nfunction -> FUNCTION ID LPAREN args_op RPAREN COLON . type LBRACE stmt_list RBRACE"]
  69 -> 1 [style=solid label="INT"]
  69 -> 2 [style=solid label="FLOAT"]
  69 -> 3 [style=solid label="DOUBLE"]
  69 -> 4 [style=solid label="STRING"]
  69 -> 5 [style=solid label="BOOL"]
  69 -> 91 [style=dashed label="type"]
  70 [label="70\nfunction -> FUNCTION MAIN LPAREN args_op RPAREN COLON . type LBRACE stmt_list RBRACE"]
  70 -> 1 [style=solid label="INT"]
  70 -> 2 [style=solid label="FLOAT"]
  70 -> 3 [style=solid label="DOUBLE"]
  70 -> 4 [style=solid label="STRING"]
  70 -> 5 [style=solid label="BOOL"]
  70 -> 92 [style=dashed label="type"]
  71 [label="71\nexpr -> expr . PLUS expr\nexpr -> expr PLUS expr .\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr"]
  71 -> 62 [style=solid label="MULT"]
  71 -> 63 [style=solid label="DIVIDE"]
  71 -> 64 [style=solid label="MODULE"]
  72 [label="72\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr MINUS expr .\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr"]
  72 -> 62 [style=solid label="MULT"]
  72 -> 63 [style=solid label="DIVIDE"]
  72 -> 64 [style=solid label="MODULE"]
  73 [label="73\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr MULT expr .\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr"]
  74 [label="74\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr DIVIDE expr .\nexpr -> expr . MODULE expr"]
  75 [label="75\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr\nexpr -> expr MODULE expr ."]
  76 [label="76\nids -> ids COMMA ID assign_op expr .\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr"]
  76 -> 60 [style=solid label="PLUS"]
  76 -> 61 [style=solid label="MINUS"]
  76 -> 62 [style=solid label="MULT"]
  76 -> 63 [style=solid label="DIVIDE"]
  76 -> 64 [style=solid label="MODULE"]
  77 [label="77\ninc_dec -> ID . INCREMENT\ninc_dec -> ID . DECREMENT"]
  77 -> 93 [style=solid label="INCREMENT"]
  77 -> 94 [style=solid label="DECREMENT"]
  78 [label="78\nwhile_stmt -> WHILE . LPAREN condition RPAREN LBRACE stmt_list RBRACE"]
  78 -> 95 [style=solid label="LPAREN"]
  79 [label="79\nwhile_stmt -> DO . LBRACE stmt_list RBRACE WHILE LPAREN condition RPAREN SEMI_COLON"]
  79 -> 96 [style=solid label="LBRACE"]
  80 [label="80\nif_stmt -> IF . LPAREN condition RPAREN LBRACE stmt_list RBRACE"]
  80 -> 97 [style=solid label="LPAREN"]
  81 [label="81\nfor_stmt -> FOR . LPAREN for_args RPAREN LBRACE stmt_list RBRACE"]
  81 -> 98 [style=solid label="LPAREN"]
  82 [label="82\ninc_dec -> INCREMENT . ID"]
  82 -> 99 [style=solid label="ID"]
  83 [label="83\ninc_dec -> DECREMENT . ID"]
  83 -> 100 [style=solid label="ID"]
  84 [label="84\nstmt -> decls ."]
  85 [label="85\nprocedure -> PROCEDURE ID LPAREN args_op RPAREN LBRACE stmt_list . RBRACE\nstmt_list -> stmt_list . stmt"]
  85 -> 77 [style=solid label="ID"]
  85 -> 1 [style=solid label="INT"]
  85 -> 2 [style=solid label="FLOAT"]
  85 -> 3 [style=solid label="DOUBLE"]
  85 -> 4 [style=solid label="STRING"]
  85 -> 5 [style=solid label="BOOL"]
  85 -> 78 [style=solid label="WHILE"]
  85 -> 79 [style=solid label="DO"]
  85 -> 80 [style=solid label="IF"]
  85 -> 81 [style=solid label="FOR"]
  85 -> 101 [style=solid label="RBRACE"]
  85 -> 82 [style=solid label="INCREMENT"]
  85 -> 83 [style=solid label="DECREMENT"]
  85 -> 84 [style=dashed label="decls"]
  85 -> 8 [style=dashed label="decl"]
  85 -> 9 [style=dashed label="type"]
  85 -> 102 [style=dashed label="stmt"]
  85 -> 87 [style=dashed label="while_stmt"]
  85 -> 88 [style=dashed label="if_stmt"]
  85 -> 89 [style=dashed label="for_stmt"]
  85 -> 90 [style=dashed label="inc_dec"]
  86 [label="86\nstmt_list -> stmt ."]
  87 [label="87\nstmt -> while_stmt ."]
  88 [label="88\nstmt -> if_stmt ."]
  89 [label="89\nstmt -> for_stmt ."]
  90 [label="90\nstmt -> inc_dec . SEMI_COLON"]
  90 -> 103 [style=solid label="SEMI_COLON"]
  91 [label="91\nfunction -> FUNCTION ID LPAREN args_op RPAREN COLON type . LBRACE stmt_list RBRACE"]
  91 -> 104 [style=solid label="LBRACE"]
  92 [label="92\nfunction -> FUNCTION MAIN LPAREN args_op RPAREN COLON type . LBRACE stmt_list RBRACE"]
  92 -> 105 [style=solid label="LBRACE"]
  93 [label="93\ninc_dec -> ID INCREMENT ."]
  94 [label="94\ninc_dec -> ID DECREMENT ."]
  95 [label="95\nwhile_stmt -> WHILE LPAREN . condition RPAREN LBRACE stmt_list RBRACE"]
  95 -> 106 [style=solid label="ID"]
  95 -> 48 [style=solid label="STRING_LITERAL"]
  95 -> 49 [style=solid label="INT_NUMBER"]
  95 -> 50 [style=solid label="DOUBLE_NUMBER"]
  95 -> 107 [style=solid label="TRUE"]
  95 -> 108 [style=solid label="FALSE"]
  95 -> 109 [style=dashed label="expr"]
  95 -> 110 [style=dashed label="condition"]
  95 -> 111 [style=dashed label="c_term"]
  95 -> 112 [style=dashed label="comp"]
  95 -> 113 [style=dashed label="comp_term"]
  96 [label="96\nwhile_stmt -> DO LBRACE . stmt_list RBRACE WHILE LPAREN condition RPAREN SEMI_COLON"]
  96 -> 77 [style=solid label="ID"]
  96 -> 1 [style=solid label="INT"]
  96 -> 2 [style=solid label="FLOAT"]
  96 -> 3 [style=solid label="DOUBLE"]
  96 -> 4 [style=solid label="STRING"]
  96 -> 5 [style=solid label="BOOL"]
  96 -> 78 [style=solid label="WHILE"]
  96 -> 79 [style=solid label="DO"]
  96 -> 80 [style=solid label="IF"]
  96 -> 81 [style=solid label="FOR"]
  96 -> 82 [style=solid label="INCREMENT"]
  96 -> 83 [style=solid label="DECREMENT"]
  96 -> 84 [style=dashed label="decls"]
  96 -> 8 [style=dashed label="decl"]
  96 -> 9 [style=dashed label="type"]
  96 -> 114 [style=dashed label="stmt_list"]
  96 -> 86 [style=dashed label="stmt"]
  96 -> 87 [style=dashed label="while_stmt"]
  96 -> 88 [style=dashed label="if_stmt"]
  96 -> 89 [style=dashed label="for_stmt"]
  96 -> 90 [style=dashed label="inc_dec"]
  97 [label="97\nif_stmt -> IF LPAREN . condition RPAREN LBRACE stmt_list RBRACE"]
  97 -> 106 [style=solid label="ID"]
  97 -> 48 [style=solid label="STRING_LITERAL"]
  97 -> 49 [style=solid label="INT_NUMBER"]
  97 -> 50 [style=solid label="DOUBLE_NUMBER"]
  97 -> 107 [style=solid label="TRUE"]
  97 -> 108 [style=solid label="FALSE"]
  97 -> 109 [style=dashed label="expr"]
  97 -> 115 [style=dashed label="condition"]
  97 -> 111 [style=dashed label="c_term"]
  97 -> 112 [style=dashed label="comp"]
  97 -> 113 [style=dashed label="comp_term"]
  98 [label="98\nfor_stmt -> FOR LPAREN . for_args RPAREN LBRACE stmt_list RBRACE"]
  98 -> 116 [style=solid label="ID"]
  98 -> 1 [style=solid label="INT"]
  98 -> 2 [style=solid label="FLOAT"]
  98 -> 3 [style=solid label="DOUBLE"]
  98 -> 4 [style=solid label="STRING"]
  98 -> 5 [style=solid label="BOOL"]
  98 -> 117 [style=dashed label="type"]
  98 -> 118 [style=dashed label="assign_stmt"]
  98 -> 119 [style=dashed label="for_args"]
  99 [label="99\ninc_dec -> INCREMENT ID ."]
  100 [label="100\ninc_dec -> DECREMENT ID ."]
  101 [label="101\nprocedure -> PROCEDURE ID LPAREN args_op RPAREN LBRACE stmt_list RBRACE ."]
  102 [label="102\nstmt_list -> stmt_list stmt ."]
  103 [label="103\nstmt -> inc_dec SEMI_COLON ."]
  104 [label="104\nfunction -> FUNCTION ID LPAREN args_op RPAREN COLON type LBRACE . stmt_list RBRACE"]
  104 -> 77 [style=solid label="ID"]
  104 -> 1 [style=solid label="INT"]
  104 -> 2 [style=solid label="FLOAT"]
  104 -> 3 [style=solid label="DOUBLE"]
  104 -> 4 [style=solid label="STRING"]
  104 -> 5 [style=solid label="BOOL"]
  104 -> 78 [style=solid label="WHILE"]
  104 -> 79 [style=solid label="DO"]
  104 -> 80 [style=solid label="IF"]
  104 -> 81 [style=solid label="FOR"]
  104 -> 82 [style=solid label="INCREMENT"]
  104 -> 83 [style=solid label="DECREMENT"]
  104 -> 84 [style=dashed label="decls"]
  104 -> 8 [style=dashed label="decl"]
  104 -> 9 [style=dashed label="type"]
  104 -> 120 [style=dashed label="stmt_list"]
  104 -> 86 [style=dashed label="stmt"]
  104 -> 87 [style=dashed label="while_stmt"]
  104 -> 88 [style=dashed label="if_stmt"]
  104 -> 89 [style=dashed label="for_stmt"]
  104 -> 90 [style=dashed label="inc_dec"]
  105 [label="105\nfunction -> FUNCTION MAIN LPAREN args_op RPAREN COLON type LBRACE . stmt_list RBRACE"]
  105 -> 77 [style=solid label="ID"]
  105 -> 1 [style=solid label="INT"]
  105 -> 2 [style=solid label="FLOAT"]
  105 -> 3 [style=solid label="DOUBLE"]
  105 -> 4 [style=solid label="STRING"]
  105 -> 5 [style=solid label="BOOL"]
  105 -> 78 [style=solid label="WHILE"]
  105 -> 79 [style=solid label="DO"]
  105 -> 80 [style=solid label="IF"]
  105 -> 81 [style=solid label="FOR"]
  105 -> 82 [style=solid label="INCREMENT"]
  105 -> 83 [style=solid label="DECREMENT"]
  105 -> 84 [style=dashed label="decls"]
  105 -> 8 [style=dashed label="decl"]
  105 -> 9 [style=dashed label="type"]
  105 -> 121 [style=dashed label="stmt_list"]
  105 -> 86 [style=dashed label="stmt"]
  105 -> 87 [style=dashed label="while_stmt"]
  105 -> 88 [style=dashed label="if_stmt"]
  105 -> 89 [style=dashed label="for_stmt"]
  105 -> 90 [style=dashed label="inc_dec"]
  106 [label="106\nexpr -> ID .\nc_term -> ID ."]
  107 [label="107\nexpr -> TRUE .\nc_term -> TRUE ."]
  108 [label="108\nexpr -> FALSE .\nc_term -> FALSE ."]
  109 [label="109\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr\ncomp_term -> expr ."]
  109 -> 60 [style=solid label="PLUS"]
  109 -> 61 [style=solid label="MINUS"]
  109 -> 62 [style=solid label="MULT"]
  109 -> 63 [style=solid label="DIVIDE"]
  109 -> 64 [style=solid label="MODULE"]
  110 [label="110\nwhile_stmt -> WHILE LPAREN condition . RPAREN LBRACE stmt_list RBRACE\ncondition -> condition . logic_op c_term"]
  110 -> 122 [style=solid label="RPAREN"]
  110 -> 123 [style=solid label="AND"]
  110 -> 124 [style=solid label="OR"]
  110 -> 125 [style=solid label="NOT"]
  110 -> 126 [style=dashed label="logic_op"]
  111 [label="111\ncondition -> c_term ."]
  112 [label="112\nc_term -> comp ."]
  113 [label="113\ncomp -> comp_term . comp_op comp_term"]
  113 -> 127 [style=solid label="EQ"]
  113 -> 128 [style=solid label="NEQ"]
  113 -> 129 [style=solid label="LT"]
  113 -> 130 [style=solid label="LE"]
  113 -> 131 [style=solid label="GT"]
  113 -> 132 [style=solid label="GE"]
  113 -> 133 [style=dashed label="comp_op"]
  114 [label="114\nstmt_list -> stmt_list . stmt\nwhile_stmt -> DO LBRACE stmt_list . RBRACE WHILE LPAREN condition RPAREN SEMI_COLON"]
  114 -> 77 [style=solid label="ID"]
  114 -> 1 [style=solid label="INT"]
  114 -> 2 [style=solid label="FLOAT"]
  114 -> 3 [style=solid label="DOUBLE"]
  114 -> 4 [style=solid label="STRING"]
  114 -> 5 [style=solid label="BOOL"]
  114 -> 78 [style=solid label="WHILE"]
  114 -> 79 [style=solid label="DO"]
  114 -> 80 [style=solid label="IF"]
  114 -> 81 [style=solid label="FOR"]
  114 -> 134 [style=solid label="RBRACE"]
  114 -> 82 [style=solid label="INCREMENT"]
  114 -> 83 [style=solid label="DECREMENT"]
  114 -> 84 [style=dashed label="decls"]
  114 -> 8 [style=dashed label="decl"]
  114 -> 9 [style=dashed label="type"]
  114 -> 102 [style=dashed label="stmt"]
  114 -> 87 [style=dashed label="while_stmt"]
  114 -> 88 [style=dashed label="if_stmt"]
  114 -> 89 [style=dashed label="for_stmt"]
  114 -> 90 [style=dashed label="inc_dec"]
  115 [label="115\nif_stmt -> IF LPAREN condition . RPAREN LBRACE stmt_list RBRACE\ncondition -> condition . logic_op c_term"]
  115 -> 135 [style=solid label="RPAREN"]
  115 -> 123 [style=solid label="AND"]
  115 -> 124 [style=solid label="OR"]
  115 -> 125 [style=solid label="NOT"]
  115 -> 126 [style=dashed label="logic_op"]
  116 [label="116\nassign_stmt -> ID . assign_op expr"]
  116 -> 32 [style=solid label="ADD_ASSIGN"]
  116 -> 33 [style=solid label="SUB_ASSIGN"]
  116 -> 34 [style=solid label="MULT_ASSIGN"]
  116 -> 35 [style=solid label="DIVIDE_ASSIGN"]
  116 -> 36 [style=solid label="MODULE_ASSIGN"]
  116 -> 37 [style=solid label="ASSIGN"]
  116 -> 136 [style=dashed label="assign_op"]
  117 [label="117\nassign_stmt -> type . ID assign_op expr"]
  117 -> 137 [style=solid label="ID"]
  118 [label="118\nfor_args -> assign_stmt . SEMI_COLON ID comp_op ID SEMI_COLON inc_dec"]
  118 -> 138 [style=solid label="SEMI_COLON"]
  119 [label="119\nfor_stmt -> FOR LPAREN for_args . RPAREN LBRACE stmt_list RBRACE"]
  119 -> 139 [style=solid label="RPAREN"]
  120 [label="120\nfunction -> FUNCTION ID LPAREN args_op RPAREN COLON type LBRACE stmt_list . RBRACE\nstmt_list -> stmt_list . stmt"]
  120 -> 77 [style=solid label="ID"]
  120 -> 1 [style=solid label="INT"]
  120 -> 2 [style=solid label="FLOAT"]
  120 -> 3 [style=solid label="DOUBLE"]
  120 -> 4 [style=solid label="STRING"]
  120 -> 5 [style=solid label="BOOL"]
  120 -> 78 [style=solid label="WHILE"]
  120 -> 79 [style=solid label="DO"]
  120 -> 80 [style=solid label="IF"]
  120 -> 81 [style=solid label="FOR"]
  120 -> 140 [style=solid label="RBRACE"]
  120 -> 82 [style=solid label="INCREMENT"]
  120 -> 83 [style=solid label="DECREMENT"]
  120 -> 84 [style=dashed label="decls"]
  120 -> 8 [style=dashed label="decl"]
  120 -> 9 [style=dashed label="type"]
  120 -> 102 [style=dashed label="stmt"]
  120 -> 87 [style=dashed label="while_stmt"]
  120 -> 88 [style=dashed label="if_stmt"]
  120 -> 89 [style=dashed label="for_stmt"]
  120 -> 90 [style=dashed label="inc_dec"]
  121 [label="121\nfunction -> FUNCTION MAIN LPAREN args_op RPAREN COLON type LBRACE stmt_list . RBRACE\nstmt_list -> stmt_list . stmt"]
  121 -> 77 [style=solid label="ID"]
  121 -> 1 [style=solid label="INT"]
  121 -> 2 [style=solid label="FLOAT"]
  121 -> 3 [style=solid label="DOUBLE"]
  121 -> 4 [style=solid label="STRING"]
  121 -> 5 [style=solid label="BOOL"]
  121 -> 78 [style=solid label="WHILE"]
  121 -> 79 [style=solid label="DO"]
  121 -> 80 [style=solid label="IF"]
  121 -> 81 [style=solid label="FOR"]
  121 -> 141 [style=solid label="RBRACE"]
  121 -> 82 [style=solid label="INCREMENT"]
  121 -> 83 [style=solid label="DECREMENT"]
  121 -> 84 [style=dashed label="decls"]
  121 -> 8 [style=dashed label="decl"]
  121 -> 9 [style=dashed label="type"]
  121 -> 102 [style=dashed label="stmt"]
  121 -> 87 [style=dashed label="while_stmt"]
  121 -> 88 [style=dashed label="if_stmt"]
  121 -> 89 [style=dashed label="for_stmt"]
  121 -> 90 [style=dashed label="inc_dec"]
  122 [label="122\nwhile_stmt -> WHILE LPAREN condition RPAREN . LBRACE stmt_list RBRACE"]
  122 -> 142 [style=solid label="LBRACE"]
  123 [label="123\nlogic_op -> AND ."]
  124 [label="124\nlogic_op -> OR ."]
  125 [label="125\nlogic_op -> NOT ."]
  126 [label="126\ncondition -> condition logic_op . c_term"]
  126 -> 106 [style=solid label="ID"]
  126 -> 48 [style=solid label="STRING_LITERAL"]
  126 -> 49 [style=solid label="INT_NUMBER"]
  126 -> 50 [style=solid label="DOUBLE_NUMBER"]
  126 -> 107 [style=solid label="TRUE"]
  126 -> 108 [style=solid label="FALSE"]
  126 -> 109 [style=dashed label="expr"]
  126 -> 143 [style=dashed label="c_term"]
  126 -> 112 [style=dashed label="comp"]
  126 -> 113 [style=dashed label="comp_term"]
  127 [label="127\ncomp_op -> EQ ."]
  128 [label="128\ncomp_op -> NEQ ."]
  129 [label="129\ncomp_op -> LT ."]
  130 [label="130\ncomp_op -> LE ."]
  131 [label="131\ncomp_op -> GT ."]
  132 [label="132\ncomp_op -> GE ."]
  133 [label="133\ncomp -> comp_term comp_op . comp_term"]
  133 -> 47 [style=solid label="ID"]
  133 -> 48 [style=solid label="STRING_LITERAL"]
  133 -> 49 [style=solid label="INT_NUMBER"]
  133 -> 50 [style=solid label="DOUBLE_NUMBER"]
  133 -> 51 [style=solid label="TRUE"]
  133 -> 52 [style=solid label="FALSE"]
  133 -> 109 [style=dashed label="expr"]
  133 -> 144 [style=dashed label="comp_term"]
  134 [label="134\nwhile_stmt -> DO LBRACE stmt_list RBRACE . WHILE LPAREN condition RPAREN SEMI_COLON"]
  134 -> 145 [style=solid label="WHILE"]
  135 [label="135\nif_stmt -> IF LPAREN condition RPAREN . LBRACE stmt_list RBRACE"]
  135 -> 146 [style=solid label="LBRACE"]
  136 [label="136\nassign_stmt -> ID assign_op . expr"]
  136 -> 47 [style=solid label="ID"]
  136 -> 48 [style=solid label="STRING_LITERAL"]
  136 -> 49 [style=solid label="INT_NUMBER"]
  136 -> 50 [style=solid label="DOUBLE_NUMBER"]
  136 -> 51 [style=solid label="TRUE"]
  136 -> 52 [style=solid label="FALSE"]
  136 -> 147 [style=dashed label="expr"]
  137 [label="137\nassign_stmt -> type ID . assign_op expr"]
  137 -> 32 [style=solid label="ADD_ASSIGN"]
  137 -> 33 [style=solid label="SUB_ASSIGN"]
  137 -> 34 [style=solid label="MULT_ASSIGN"]
  137 -> 35 [style=solid label="DIVIDE_ASSIGN"]
  137 -> 36 [style=solid label="MODULE_ASSIGN"]
  137 -> 37 [style=solid label="ASSIGN"]
  137 -> 148 [style=dashed label="assign_op"]
  138 [label="138\nfor_args -> assign_stmt SEMI_COLON . ID comp_op ID SEMI_COLON inc_dec"]
  138 -> 149 [style=solid label="ID"]
  139 [label="139\nfor_stmt -> FOR LPAREN for_args RPAREN . LBRACE stmt_list RBRACE"]
  139 -> 150 [style=solid label="LBRACE"]
  140 [label="140\nfunction -> FUNCTION ID LPAREN args_op RPAREN COLON type LBRACE stmt_list RBRACE ."]
  141 [label="141\nfunction -> FUNCTION MAIN LPAREN args_op RPAREN COLON type LBRACE stmt_list RBRACE ."]
  142 [label="142\nwhile_stmt -> WHILE LPAREN condition RPAREN LBRACE . stmt_list RBRACE"]
  142 -> 77 [style=solid label="ID"]
  142 -> 1 [style=solid label="INT"]
  142 -> 2 [style=solid label="FLOAT"]
  142 -> 3 [style=solid label="DOUBLE"]
  142 -> 4 [style=solid label="STRING"]
  142 -> 5 [style=solid label="BOOL"]
  142 -> 78 [style=solid label="WHILE"]
  142 -> 79 [style=solid label="DO"]
  142 -> 80 [style=solid label="IF"]
  142 -> 81 [style=solid label="FOR"]
  142 -> 82 [style=solid label="INCREMENT"]
  142 -> 83 [style=solid label="DECREMENT"]
  142 -> 84 [style=dashed label="decls"]
  142 -> 8 [style=dashed label="decl"]
  142 -> 9 [style=dashed label="type"]
  142 -> 151 [style=dashed label="stmt_list"]
  142 -> 86 [style=dashed label="stmt"]
  142 -> 87 [style=dashed label="while_stmt"]
  142 -> 88 [style=dashed label="if_stmt"]
  142 -> 89 [style=dashed label="for_stmt"]
  142 -> 90 [style=dashed label="inc_dec"]
  143 [label="143\ncondition -> condition logic_op c_term ."]
  144 [label="144\ncomp -> comp_term comp_op comp_term ."]
  145 [label="145\nwhile_stmt -> DO LBRACE stmt_list RBRACE WHILE . LPAREN condition RPAREN SEMI_COLON"]
  145 -> 152 [style=solid label="LPAREN"]
  146 [label="146\nif_stmt -> IF LPAREN condition RPAREN LBRACE . stmt_list RBRACE"]
  146 -> 77 [style=solid label="ID"]
  146 -> 1 [style=solid label="INT"]
  146 -> 2 [style=solid label="FLOAT"]
  146 -> 3 [style=solid label="DOUBLE"]
  146 -> 4 [style=solid label="STRING"]
  146 -> 5 [style=solid label="BOOL"]
  146 -> 78 [style=solid label="WHILE"]
  146 -> 79 [style=solid label="DO"]
  146 -> 80 [style=solid label="IF"]
  146 -> 81 [style=solid label="FOR"]
  146 -> 82 [style=solid label="INCREMENT"]
  146 -> 83 [style=solid label="DECREMENT"]
  146 -> 84 [style=dashed label="decls"]
  146 -> 8 [style=dashed label="decl"]
  146 -> 9 [style=dashed label="type"]
  146 -> 153 [style=dashed label="stmt_list"]
  146 -> 86 [style=dashed label="stmt"]
  146 -> 87 [style=dashed label="while_stmt"]
  146 -> 88 [style=dashed label="if_stmt"]
  146 -> 89 [style=dashed label="for_stmt"]
  146 -> 90 [style=dashed label="inc_dec"]
  147 [label="147\nassign_stmt -> ID assign_op expr .\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr"]
  147 -> 60 [style=solid label="PLUS"]
  147 -> 61 [style=solid label="MINUS"]
  147 -> 62 [style=solid label="MULT"]
  147 -> 63 [style=solid label="DIVIDE"]
  147 -> 64 [style=solid label="MODULE"]
  148 [label="148\nassign_stmt -> type ID assign_op . expr"]
  148 -> 47 [style=solid label="ID"]
  148 -> 48 [style=solid label="STRING_LITERAL"]
  148 -> 49 [style=solid label="INT_NUMBER"]
  148 -> 50 [style=solid label="DOUBLE_NUMBER"]
  148 -> 51 [style=solid label="TRUE"]
  148 -> 52 [style=solid label="FALSE"]
  148 -> 154 [style=dashed label="expr"]
  149 [label="149\nfor_args -> assign_stmt SEMI_COLON ID . comp_op ID SEMI_COLON inc_dec"]
  149 -> 127 [style=solid label="EQ"]
  149 -> 128 [style=solid label="NEQ"]
  149 -> 129 [style=solid label="LT"]
  149 -> 130 [style=solid label="LE"]
  149 -> 131 [style=solid label="GT"]
  149 -> 132 [style=solid label="GE"]
  149 -> 155 [style=dashed label="comp_op"]
  150 [label="150\nfor_stmt -> FOR LPAREN for_args RPAREN LBRACE . stmt_list RBRACE"]
  150 -> 77 [style=solid label="ID"]
  150 -> 1 [style=solid label="INT"]
  150 -> 2 [style=solid label="FLOAT"]
  150 -> 3 [style=solid label="DOUBLE"]
  150 -> 4 [style=solid label="STRING"]
  150 -> 5 [style=solid label="BOOL"]
  150 -> 78 [style=solid label="WHILE"]
  150 -> 79 [style=solid label="DO"]
  150 -> 80 [style=solid label="IF"]
  150 -> 81 [style=solid label="FOR"]
  150 -> 82 [style=solid label="INCREMENT"]
  150 -> 83 [style=solid label="DECREMENT"]
  150 -> 84 [style=dashed label="decls"]
  150 -> 8 [style=dashed label="decl"]
  150 -> 9 [style=dashed label="type"]
  150 -> 156 [style=dashed label="stmt_list"]
  150 -> 86 [style=dashed label="stmt"]
  150 -> 87 [style=dashed label="while_stmt"]
  150 -> 88 [style=dashed label="if_stmt"]
  150 -> 89 [style=dashed label="for_stmt"]
  150 -> 90 [style=dashed label="inc_dec"]
  151 [label="151\nstmt_list -> stmt_list . stmt\nwhile_stmt -> WHILE LPAREN condition RPAREN LBRACE stmt_list . RBRACE"]
  151 -> 77 [style=solid label="ID"]
  151 -> 1 [style=solid label="INT"]
  151 -> 2 [style=solid label="FLOAT"]
  151 -> 3 [style=solid label="DOUBLE"]
  151 -> 4 [style=solid label="STRING"]
  151 -> 5 [style=solid label="BOOL"]
  151 -> 78 [style=solid label="WHILE"]
  151 -> 79 [style=solid label="DO"]
  151 -> 80 [style=solid label="IF"]
  151 -> 81 [style=solid label="FOR"]
  151 -> 157 [style=solid label="RBRACE"]
  151 -> 82 [style=solid label="INCREMENT"]
  151 -> 83 [style=solid label="DECREMENT"]
  151 -> 84 [style=dashed label="decls"]
  151 -> 8 [style=dashed label="decl"]
  151 -> 9 [style=dashed label="type"]
  151 -> 102 [style=dashed label="stmt"]
  151 -> 87 [style=dashed label="while_stmt"]
  151 -> 88 [style=dashed label="if_stmt"]
  151 -> 89 [style=dashed label="for_stmt"]
  151 -> 90 [style=dashed label="inc_dec"]
  152 [label="152\nwhile_stmt -> DO LBRACE stmt_list RBRACE WHILE LPAREN . condition RPAREN SEMI_COLON"]
  152 -> 106 [style=solid label="ID"]
  152 -> 48 [style=solid label="STRING_LITERAL"]
  152 -> 49 [style=solid label="INT_NUMBER"]
  152 -> 50 [style=solid label="DOUBLE_NUMBER"]
  152 -> 107 [style=solid label="TRUE"]
  152 -> 108 [style=solid label="FALSE"]
  152 -> 109 [style=dashed label="expr"]
  152 -> 158 [style=dashed label="condition"]
  152 -> 111 [style=dashed label="c_term"]
  152 -> 112 [style=dashed label="comp"]
  152 -> 113 [style=dashed label="comp_term"]
  153 [label="153\nstmt_list -> stmt_list . stmt\nif_stmt -> IF LPAREN condition RPAREN LBRACE stmt_list . RBRACE"]
  153 -> 77 [style=solid label="ID"]
  153 -> 1 [style=solid label="INT"]
  153 -> 2 [style=solid label="FLOAT"]
  153 -> 3 [style=solid label="DOUBLE"]
  153 -> 4 [style=solid label="STRING"]
  153 -> 5 [style=solid label="BOOL"]
  153 -> 78 [style=solid label="WHILE"]
  153 -> 79 [style=solid label="DO"]
  153 -> 80 [style=solid label="IF"]
  153 -> 81 [style=solid label="FOR"]
  153 -> 159 [style=solid label="RBRACE"]
  153 -> 82 [style=solid label="INCREMENT"]
  153 -> 83 [style=solid label="DECREMENT"]
  153 -> 84 [style=dashed label="decls"]
  153 -> 8 [style=dashed label="decl"]
  153 -> 9 [style=dashed label="type"]
  153 -> 102 [style=dashed label="stmt"]
  153 -> 87 [style=dashed label="while_stmt"]
  153 -> 88 [style=dashed label="if_stmt"]
  153 -> 89 [style=dashed label="for_stmt"]
  153 -> 90 [style=dashed label="inc_dec"]
  154 [label="154\nassign_stmt -> type ID assign_op expr .\nexpr -> expr . PLUS expr\nexpr -> expr . MINUS expr\nexpr -> expr . MULT expr\nexpr -> expr . DIVIDE expr\nexpr -> expr . MODULE expr"]
  154 -> 60 [style=solid label="PLUS"]
  154 -> 61 [style=solid label="MINUS"]
  154 -> 62 [style=solid label="MULT"]
  154 -> 63 [style=solid label="DIVIDE"]
  154 -> 64 [style=solid label="MODULE"]
  155 [label="155\nfor_args -> assign_stmt SEMI_COLON ID comp_op . ID SEMI_COLON inc_dec"]
  155 -> 160 [style=solid label="ID"]
  156 [label="156\nstmt_list -> stmt_list . stmt\nfor_stmt -> FOR LPAREN for_args RPAREN LBRACE stmt_list . RBRACE"]
  156 -> 77 [style=solid label="ID"]
  156 -> 1 [style=solid label="INT"]
  156 -> 2 [style=solid label="FLOAT"]
  156 -> 3 [style=solid label="DOUBLE"]
  156 -> 4 [style=solid label="STRING"]
  156 -> 5 [style=solid label="BOOL"]
  156 -> 78 [style=solid label="WHILE"]
  156 -> 79 [style=solid label="DO"]
  156 -> 80 [style=solid label="IF"]
  156 -> 81 [style=solid label="FOR"]
  156 -> 161 [style=solid label="RBRACE"]
  156 -> 82 [style=solid label="INCREMENT"]
  156 -> 83 [style=solid label="DECREMENT"]
  156 -> 84 [style=dashed label="decls"]
  156 -> 8 [style=dashed label="decl"]
  156 -> 9 [style=dashed label="type"]
  156 -> 102 [style=dashed label="stmt"]
  156 -> 87 [style=dashed label="while_stmt"]
  156 -> 88 [style=dashed label="if_stmt"]
  156 -> 89 [style=dashed label="for_stmt"]
  156 -> 90 [style=dashed label="inc_dec"]
  157 [label="157\nwhile_stmt -> WHILE LPAREN condition RPAREN LBRACE stmt_list RBRACE ."]
  158 [label="158\nwhile_stmt -> DO LBRACE stmt_list RBRACE WHILE LPAREN condition . RPAREN SEMI_COLON\ncondition -> condition . logic_op c_term"]
  158 -> 162 [style=solid label="RPAREN"]
  158 -> 123 [style=solid label="AND"]
  158 -> 124 [style=solid label="OR"]
  158 -> 125 [style=solid label="NOT"]
  158 -> 126 [style=dashed label="logic_op"]
  159 [label="159\nif_stmt -> IF LPAREN condition RPAREN LBRACE stmt_list RBRACE ."]
  160 [label="160\nfor_args -> assign_stmt SEMI_COLON ID comp_op ID . SEMI_COLON inc_dec"]
  160 -> 163 [style=solid label="SEMI_COLON"]
  161 [label="161\nfor_stmt -> FOR LPAREN for_args RPAREN LBRACE stmt_list RBRACE ."]
  162 [label="162\nwhile_stmt -> DO LBRACE stmt_list RBRACE WHILE LPAREN condition RPAREN . SEMI_COLON"]
  162 -> 164 [style=solid label="SEMI_COLON"]
  163 [label="163\nfor_args -> assign_stmt SEMI_COLON ID comp_op ID SEMI_COLON . inc_dec"]
  163 -> 77 [style=solid label="ID"]
  163 -> 82 [style=solid label="INCREMENT"]
  163 -> 83 [style=solid label="DECREMENT"]
  163 -> 165 [style=dashed label="inc_dec"]
  164 [label="164\nwhile_stmt -> DO LBRACE stmt_list RBRACE WHILE LPAREN condition RPAREN SEMI_COLON ."]
  165 [label="165\nfor_args -> assign_stmt SEMI_COLON ID comp_op ID SEMI_COLON inc_dec ."]
}
